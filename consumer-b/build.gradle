buildscript {
    ext {
		gradleAvroVersion = "0.14.2"
    }
    repositories {
        jcenter()
    }
    dependencies {
		classpath "com.commercehub.gradle.plugin:gradle-avro-plugin:${gradleAvroVersion}"
	}
}

plugins {
    id 'org.springframework.boot' version '2.4.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

apply plugin: "com.commercehub.gradle.plugin.avro"

group = 'dev4fun'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        url "http://packages.confluent.io/maven/"
    }
}

ext {
    set('springCloudVersion', "2020.0.2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.cloud:spring-cloud-stream'
    implementation 'org.springframework.cloud:spring-cloud-stream-binder-kafka'

	implementation 'io.confluent:kafka-avro-serializer:4.0.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

task generateAvro(type: com.commercehub.gradle.plugin.avro.GenerateAvroJavaTask) {
	source("$rootDir/src/main/avro")
	outputDir = file("$buildDir/generated-main-avro-java")
}

sourceSets {
	main {
		java {
			srcDir file("$buildDir/generated-main-avro-java")
		}
	}
}

test {
    useJUnitPlatform()
}
